When would you want to use a remote repository rather than keeping all your work local?
If you work from more than one computer, e.g. home and office or laptop.
If more than one person is working on the project, you need a central place to collect updates.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If you don't know who else has changed the repository or what was changed, automatic updates could introduce code that's incompatible with what you have or break things you've already fixed.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are copies of someone else's repository that you can't change, while clones are copies of a repository you are allowed to edit. Branches are different versions of the same codebase in a repository.
You use clones and branches when working on your own code, especially with multiple people. You use a fork when you want to look at and possibly change someone else's project and possibly later request your changes be added back to the original project.

What is the benefit of having a copy of the last known state of the remote stored locally?
It allows for comparison of changes you made with those someone else working on the project made since the last central check-in. It also allows you to work offline and still sync up later and merge your changes in with someone else's reliably.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
We would either call, text, or e-mail suggested changes and file versions between people or use a shared drive with multiple versions someone would review. Comparing versions, merging, and requesting reviews would all be somewhat harder, and the only benefit would be not requiring an Internet connection to access GitHub.
