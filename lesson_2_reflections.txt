What happens when you initialize a repository? Why do you need to do it?
It sets up the meta data to keep track of revisions. Without initialization, git would not know version control was intended for these files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area holds files before they are added to the repository, but not all files in the working directory are in either the staging area or repository. It provides more control over what is added to version control and when.

How can you use the staging area to make sure you have one commit per logical change?
By adding the file to staging after each logical change. This ensures that only that change gets committed before other changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Experimenting with a new implementation but still fixing bugs in the main branch-- keep the bug fixes and new code separate to keep the main branch stable
Dev/Beta/Production branches for tracking code rollout through stages
Multiple developers working on different features can use different branches to keep work separate before merging

How do the diagrams help you visualize the branch structure?
Diagrams show where branches diverge and can identify who made which changes to which branches.
